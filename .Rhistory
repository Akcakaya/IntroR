install.packages(c("maptools","ggplot2","dismo","biomod2","raster","rgdal","rJava","gdistance","reshape","lme4","doSNOW","foreach"))
author("test",use_git=FALSE)
library(slidify)
library(slidifyLibraries)
author("test",use_git=FALSE)
Sys.which('git')
Sys.getenv("PATH")
list.files(
path=c("c:/program files", "c:/program files (x86)"),
pattern="git.exe",
full.names=TRUE,
recursive=TRUE
)
dat<-read.csv("C:/Users/Ben/Desktop/SysSource.csv")
head(dat)
require(chron)
dat$Creation.Date
chron(dat$Creation.Date)
chron(as.character(dat$Creation.Date))
as.character(dat$Creation.Date)
strsplit(as.character(dat$Creation.Date))
strsplit(as.character(dat$Creation.Date),split="M ")
sapply(strsplit(as.character(dat$Creation.Date),split="M "),function(x){
x[2]
}
)
tail(dat)
dat<-dat[,-2461]
dat$Date <- sapply(strsplit(as.character(dat$Creation.Date),split="M "),function(x){
x[2]
})
head(dat)
strsplit(as.character(dat$Creation.Date),split=" "),function(x){
x[1]
})
strsplit(as.character(dat$Creation.Date),split=" "),function(x){
x[1]
})
as.character(dat$Creation.Date)
as.character(dat$Creation.Date),split=" ")
as.character(dat$Creation.Date),split=" ")
strsplit(as.character(dat$Creation.Date),split=" ")
sapply(strsplit(as.character(dat$Creation.Date),split=" "),function(x){
x[1]
})
#Read in Data
require(chron)
dat<-read.csv("C:/Users/Ben/Desktop/SysSource.csv")
tail(dat)
#last record is an error
dat<-dat[,-2461]
#split date and time columns
dat$Date <- sapply(strsplit(as.character(dat$Creation.Date),split="M "),function(x){
x[2]
})
dat$Time<-sapply(strsplit(as.character(dat$Creation.Date),split=" "),function(x){
x[1]
})
system('git config --global -list')
system('git config --global --list')
system('git config --global -list')
system("git config --global -list')
system("git config --global -list")
system("git config --global-list")
system("git config --global --list")
system("git config --global --l")
sum(856+765)
856 + 756 #Which implicitely computes:
sum(856+765)
104*187
prod(104*187)
prod(104*187)
1/(12+47)
1/12+47 == 1/(12+47)
c(x,y)
x<-c(1,2,3,4,5)
c(x,y)
y<-c(12, 17, 9, 11)
c(x,y)
g<-seq(11,333,3)
g[68]
g[c(68,79)]
1/(5+10) + 1/(6*46)
sum(1/(5+10) + 1/(6*46))
log(8)
log(8)^(1/3)
log10(8)^(1/3)
?cut
cut(x,2)
x<-0:100
cut(x,2)
levels(cut)
levels(b)
b<-cut(x,2)
levels(b)
b<-cut(x,3)
b
b<-cut(x,3,dig.label=4)
b
b<-cut(x,3,dig.label=2)
b
b<-cut(x,3,dig.label=1)
b
b<-cut(x,3,dig.label=0)
b
b<-cut(x,3,dig.lab=0)
b
b<-cut(x,3,dig.lab=1)
b
b<-cut(x,3,dig.lab=2)
b
b<-cut(x,3,dig.lab=3)
b
b<-cut(x,3,dig.lab=2)
b<-cut(x,3,dig.lab=4)
b
b<-cut(x,3,dig.lab=5)
b
b<-cut(x,c(0,25,50,75,100))
b
levels(b)
df <- data.frame(id = c("Jason","Paul","Mary", "Robert","Toby","Nina","Robin","James"), x = 1:10, y = rnorm(10))
mtcars[mtcars$cyl = 4, ]
mtcars[mtcars$cyl == 4, ]
head(x)
x<-mtcars[mtcars$cyl == 4, ]
head(x)
mtcars[-1:4, ]
x<-mtcars[-c(1:4), ]
head(x)
mtcars[mtcars$cyl <= 5]
x<-mtcars[mtcars$cyl <= 5]
x<-mtcars[mtcars$cyl <= 5,]
head(x)
mtcars[mtcars$cyl == 4 | 6, ]
print("mtcars[1:20] calls the first 20 positions, but does not specify any columns")
library(ggplot2)
data(diamonds)
ncol(diamonds)
nrow(diamonds)
str(diamonds)
dim(diamonds)
small_diamonds<-diamonds[c(1:9,19:23),]
head(diamonds)
diamonds[diamonds$cut==Ideal,]
diamonds[diamonds$cut=="Ideal",]
nrow(diamonds[diamonds$cut==Ideal,])
nrow(diamonds[diamonds$cut=="Ideal",])
mod <- lm(mpg ~ wt, data = mtcars)
str(mod)
summary(mod)
mod$residuals
install.packages("phyloorchard",repos="http://R-Forge.R-project.org")
install.packages("phyloOrchard",repos="http://R-Forge.R-project.org")
install.packages("PhyloOrchard",repos="http://R-Forge.R-project.org")
library(PhyloOrchard)
?PhyloOrchard
data(BinindaEmondsEtAl2007)
plot(BinindaEmondsEtAl2007[[1]],show.node.label=TRUE)
BinindaEmondsEtAl2007[[1]]
tree$tip.labels
tree<-BinindaEmondsEtAl2007[[1]]
tree$tip.labels
tree$tip.label
tree$tip.label %in% "Dipodomys_merriami"
which(tree$tip.label %in% "Dipodomys_merriami")
which(tree$tip.label %in% "chaetodipus baileyi")
which(tree$tip.label %in% "Chaetodipus_baileyi")
which(tree$tip.label %in% "Dipodomys_merriami")
which(tree$tip.label %in% "Chaetodipus_baileyi")
trx[1407,1391]
trx<-cophentic(tree)
require(ape)
trx<-cophentic(tree)
trx<-cophenetic(tree)
trx[1407,1391]
tree
sum(trx)
which(tree$tip.label %in% "Dipodomys_merriami")
which(tree$tip.label %in% "Chaetodipus_baileyi")
trx["Dipodomys_merriami","Chaetodipus_baileyi"]
trx[1,5]
?prune.taxa
?prune
require(picante)
library(PhyloOrchard)
data(BinindaEmondsEtAl2007)
plot(BinindaEmondsEtAl2007[[1]],show.node.label=TRUE)
tree<-BinindaEmondsEtAl2007[[1]]
which(tree$tip.label %in% "Dipodomys_merriami")
which(tree$tip.label %in% "Chaetodipus_baileyi")
prune.sample(tree,Dipodomys_merriami","Chaetodipus_baileyi)
prune.sample(tree,"Dipodomys_merriami","Chaetodipus_baileyi")
prune.sample(tree,c("Dipodomys_merriami","Chaetodipus_baileyi"))
?prune.sample
prune.sample(phylo=tree,x=c("Dipodomys_merriami","Chaetodipus_baileyi"))
d<-matrix(nrow=1,ncol=2)
rownames(d)<-("Dipodomys_merriami","Chaetodipus_baileyi")
rownames(d)<-c("Dipodomys_merriami","Chaetodipus_baileyi")
colnames(d)<-c("Dipodomys_merriami","Chaetodipus_baileyi")
prune.sample(phylo=tree,x=d)
prune.sample(phylo=tree,samp=d)
tree.p<-prune.sample(phylo=tree,samp=d)
plot(tree.p)
tree.p
colnames(d)<-c("Dipodomys_merriami","Chaetodipus_baileyi","Peromyscus_eremicus","Dipodomys_ordii")
#prune the tree
d<-matrix(nrow=1,ncol=4)
colnames(d)<-c("Dipodomys_merriami","Chaetodipus_baileyi","Peromyscus_eremicus","Dipodomys_ordii")
#prune the tree
tree.p<-prune.sample(phylo=tree,samp=d)
plot(tree.p)
tree.p
d<-matrix(nrow=1,ncol=3)
colnames(d)<-c("Dipodomys_merriami","Chaetodipus_baileyi","Peromyscus_eremicus")
#prune the tree
tree.p<-prune.sample(phylo=tree,samp=d)
plot(tree.p)
PhyloOrchard
?PhyloOrchard
?data
data(PhyloOrchard)
?PhyloOrchard
??PhyloOrchard
?PhyloOrchard::
data()
tree<-read.tree("C:/Users/Ben/Desktop/Smith_2011_angiosperms.txt")
tree
which(tree$tip.label %in% "Columnea")
setwd("C:/Users/Ben/Documents/GitHub/IntroR")
largest(6,57,5)
largest<-function(x,y,z){
a<-c(x,y,z)
l<-which.max(a)
paste(a[l],"is the largest number")
}
largest(6,57,5)
length(a)
longs<-function(x,y){
if(length(x) > length(y)){paste("x is longer")}
if(length(x) < length(y)){paste("y is longer")}
if(length(x) == length(y)){paste("x and y are the same length")}
}
longs(a,b)
a<-c(5,6,7,8,9)
b<-c(1:20)
longs<-function(x,y){
if(length(x) > length(y)){paste("x is longer")}
if(length(x) < length(y)){paste("y is longer")}
if(length(x) == length(y)){paste("x and y are the same length")}
}
longs(a,b)
