<!DOCTYPE html>
<html>
<head>
<style type="text/css">.knitr.inline {
  background-color: #f7f7f7;
  border:solid 1px #B0B0B0;
}
.error {
	font-weight: bold;
	color: #FF0000;
},
.warning {
	font-weight: bold;
}
.message {
	font-style: italic;
}
.source, .output, .warning, .error, .message {
	padding: 0em 1em;
  border:solid 1px #F7F7F7;
}
.source {
  background-color: #f5f5f5;
}
.rimage.left {
  text-align: left;
}
.rimage.right {
  text-align: right;
}
.rimage.center {
  text-align: center;
}
.hl.num {
  color: #AF0F91;
}
.hl.str {
  color: #317ECC;
}
.hl.com {
  color: #AD95AF;
  font-style: italic;
}
.hl.opt {
  color: #000000;
}
.hl.std {
  color: #585858;
}
.hl.kwa {
  color: #295F94;
  font-weight: bold;
}
.hl.kwb {
  color: #B05A65;
}
.hl.kwc {
  color: #55aa55;
}
.hl.kwd {
  color: #BC5A65;
  font-weight: bold;
}</style>
  <title>For Loops</title>
  <meta charset="utf-8">
  <meta name="description" content="For Loops">
  <meta name="author" content="Ben Weinstein">
  <meta name="generator" content="slidify" />
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta http-equiv="X-UA-Compatible" content="chrome=1">
  <link rel="stylesheet" href="libraries/frameworks/io2012/css/default.css" media="all" >
  <link rel="stylesheet" href="libraries/frameworks/io2012/phone.css" 
    media="only screen and (max-device-width: 480px)" >
  <link rel="stylesheet" href="libraries/frameworks/io2012/css/slidify.css" >
  <link rel="stylesheet" href="libraries/highlighters/highlight.js/css/tomorrow.css" />
  <base target="_blank"> <!-- This amazingness opens all links in a new tab. -->
  <script data-main="libraries/frameworks/io2012/js/slides" 
    src="libraries/frameworks/io2012/js/require-1.0.8.min.js">
  </script>
  
    <link rel="stylesheet" href = "libraries/widgets/bootstrap/css/bootstrap.css">
<link rel="stylesheet" href = "libraries/widgets/bootstrap/css/bootstrap.min.css">
<link rel="stylesheet" href = "assets/css/ribbons.css">

</head>
<body style="opacity: 0">
  <slides class="layout-widescreen">
    
    <!-- LOGO SLIDE -->
    <!-- END LOGO SLIDE -->
    

    <!-- TITLE SLIDE -->
    <!-- Should I move this to a Local Layout File? -->
    <slide class="title-slide segue nobackground">
      <hgroup class="auto-fadein">
        <h1>For Loops</h1>
        <h2>Flow Statements</h2>
        <p>Ben Weinstein<br/></p>
      </hgroup>
          </slide>

    <!-- SLIDES -->
      <slide class="" id="slide-1" style="background:;">
  <hgroup>
    <h1>For loops</h1>
  </hgroup>
  <article>
    <p>Loops a re one of the most important programming tools you will learn. The first loop wewill learn i a for loop. A for loop runs for a certain number of steps, which you define before any statements in the loop are executed.
The basic syntax is</p>

<p><em>for(some sequence of steps)</em></p>

<p>{</p>

<p>execute some statements</p>

<p>}</p>

  </article>
  <!-- Presenter Notes -->
</slide>

      <slide class="" id="slide-2" style="background:;">
  <hgroup>
    <h1>Why use a for loop?</h1>
  </hgroup>
  <article>
    <ol class = "build">
<li>We have a repeated process with indentical formatting, but different values.</li>
<li>To avoid laborious typing into R</li>
</ol>

  </article>
  <!-- Presenter Notes -->
</slide>

      <slide class="" id="slide-3" style="background:;">
  <hgroup>
    <h2>Our first loop</h2>
  </hgroup>
  <article>
    <h1>for(i in 1:5){</h1>

<p>i starts at 1, R will execute some statements; i is incremented to i = 2 and statements are executed again; i is incremented to i=3 and statements are executed; and so on, until i = 25, at which point the loop executes the set of statements for the last time.</p>

<h1>}</h1>

<pre><code class="r">for (i in 1:5) {
    print(i)
}
</code></pre>

<pre><code>## [1] 1
## [1] 2
## [1] 3
## [1] 4
## [1] 5
</code></pre>

  </article>
  <!-- Presenter Notes -->
</slide>

      <slide class="" id="slide-4" style="background:;">
  <hgroup>
    <h2>For loop Syntax </h2>
  </hgroup>
  <article>
    <p>Keep these straight: Be sure you distinguish between curly braces {}, parentheses ( ), and square brackets [ ]. The brackets are used to access <em>elements</em> of vectors, matrices, and dataframes. The parentheses are used to specify arguments to <em>functions</em>. Finally, the curly braces enclose statements to be executed within the body of a <em>loop</em>.</p>

  </article>
  <!-- Presenter Notes -->
</slide>

      <slide class="" id="slide-5" style="background:;">
  <hgroup>
    <h1>Using a for loop</h1>
  </hgroup>
  <article>
    <p>One of the most useful features of for loops is the ability to modify variables within the
for loop. </p>

<pre><code class="r">x &lt;- 2
for (i in 1:4) {
    x &lt;- x^2
}
</code></pre>

  </article>
  <!-- Presenter Notes -->
</slide>

      <slide class="" id="slide-6" style="background:;">
  <hgroup>
    <h1><strong>Try it!</strong></h1>
  </hgroup>
  <article>
    
<div style='float:left;width:48%;' class='centered'>
  <ul>
<li>1. Create a for loop that prints numbers 1 to 100</li>
<li>2. Create a for loop that prints numbers 100 to 1</li>
<li>3. Create a for loop that adds x + 1 to numbers 1:5</li>
</ul>


</div>
<div style='float:right;width:48%;'>
  <ul>
<li>4. Create a for loop that divides all even numbers from 0-20 by 10, <em>hint</em> consider using seq()</li>
<li>5. Bonus! What would be the final value here, witout trying it!</li>
</ul>

<pre><code class="r">dogs &lt;- 10
for (i in 1:5) {
    dogs &lt;- dogs + 1
}
</code></pre>

<ul>
<li>Why?</li>
</ul>

</div>
  </article>
  <!-- Presenter Notes -->
</slide>

      <slide class="" id="slide-7" style="background:;">
  <hgroup>
    <h2>For Loops and Vectors</h2>
  </hgroup>
  <article>
    <p>In the above examples, we used i directly in several mathematical operations. But it is more common to loop over elements of a vector to accomplish some particular task.</p>

<pre><code class="r">nameVector &lt;- c(&quot;Charlie&quot;, &quot;Helga&quot;, &quot;Clancy&quot;, &quot;Matilda&quot;, &quot;Jones&quot;)
for (i in 1:length(nameVector)) {
    print(paste(&quot;Nice to meet you&quot;, nameVector[i], &quot; &quot;))

}
</code></pre>

<pre><code>## [1] &quot;Nice to meet you Charlie  &quot;
## [1] &quot;Nice to meet you Helga  &quot;
## [1] &quot;Nice to meet you Clancy  &quot;
## [1] &quot;Nice to meet you Matilda  &quot;
## [1] &quot;Nice to meet you Jones  &quot;
</code></pre>

  </article>
  <!-- Presenter Notes -->
</slide>

      <slide class="" id="slide-8" style="background:;">
  <hgroup>
    <h2>What did that really do?</h2>
  </hgroup>
  <article>
    <p>Consider the loop in pieces</p>

<pre><code class="r"># How many positions are in nameVector
length(nameVector)
</code></pre>

<pre><code>## [1] 5
</code></pre>

<pre><code class="r">
# how do we index a vector
nameVector[1]
</code></pre>

<pre><code>## [1] &quot;Charlie&quot;
</code></pre>

  </article>
  <!-- Presenter Notes -->
</slide>

      <slide class="" id="slide-9" style="background:;">
  <hgroup>
    <h2>What did that really do?</h2>
  </hgroup>
  <article>
    <pre><code class="r">paste(&quot;Nice to meet you&quot;, nameVector[1], sep = &quot; &quot;)
</code></pre>

<pre><code>## [1] &quot;Nice to meet you Charlie&quot;
</code></pre>

<pre><code class="r"># loops are their own little environments, so print() so you can see them on
# your console.
nameVector &lt;- c(&quot;Charlie&quot;, &quot;Helga&quot;, &quot;Clancy&quot;, &quot;Matilda&quot;, &quot;Jones&quot;)
for (i in 1:length(nameVector)) {
    print(paste(&quot;Nice to meet you&quot;, nameVector[i], &quot; &quot;))
}
</code></pre>

<pre><code>## [1] &quot;Nice to meet you Charlie  &quot;
## [1] &quot;Nice to meet you Helga  &quot;
## [1] &quot;Nice to meet you Clancy  &quot;
## [1] &quot;Nice to meet you Matilda  &quot;
## [1] &quot;Nice to meet you Jones  &quot;
</code></pre>

  </article>
  <!-- Presenter Notes -->
</slide>

      <slide class="" id="slide-10" style="background:;">
  <hgroup>
    <h1><strong>Try it!</strong></h1>
  </hgroup>
  <article>
    
<div style='float:left;width:48%;' class='centered'>
  <ul>
<li>1. Create a vector of names of people in your row, write them a nice message</li>
<li>2. Explain why the following code is wrong</li>
</ul>

<p>for(x in 1:10) {
  print(sum(i))
}</p>

<ul>
<li>3. Create a vector of 1:10 and a vector of 31:40. Add the first elements of each vector together.</li>
</ul>


</div>
<div style='float:right;width:48%;'>
  <ul>
<li>4. </li>
</ul>

</div>
  </article>
  <!-- Presenter Notes -->
</slide>

      <slide class="" id="slide-11" style="background:;">
  <hgroup>
    
  </hgroup>
  <article>
    
  </article>
  <!-- Presenter Notes -->
</slide>

    <slide class="backdrop"></slide>
  </slides>

  <!--[if IE]>
    <script 
      src="http://ajax.googleapis.com/ajax/libs/chrome-frame/1/CFInstall.min.js">  
    </script>
    <script>CFInstall.check({mode: 'overlay'});</script>
  <![endif]-->
</body>
<!-- Grab CDN jQuery, fall back to local if offline -->
<script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.7.min.js"></script>
<script>window.jQuery || document.write('<script src="libraries/widgets/quiz/js/jquery-1.7.min.js"><\/script>')</script>
<!-- Load Javascripts for Widgets -->
<script src='libraries/widgets/bootstrap/js/bootstrap.min.js'></script>
<script>  
$(function (){ 
  $("#example").popover(); 
  $("[rel='tooltip']").tooltip(); 
});  
</script>  
<!-- LOAD HIGHLIGHTER JS FILES -->
<script src="libraries/highlighters/highlight.js/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>
<!-- DONE LOADING HIGHLIGHTER JS FILES -->
</html>
